//-------------------------------------------------
// Pogo Stick
//-------------------------------------------------

class HDPogoStick:HDWeapon{

	default{
		-hdweapon.droptranslation
		+hdweapon.dontnull
		-hdweapon.fitsinbackpack
		+inventory.invbar
		
		inventory.icon "POGOB0";
        weapon.selectionorder 101;
	
		scale 0.7;
		tag "$TAG_POGOSTICK";
		hdweapon.refid "pog";   //poggers bro!! 8y
	}

    override bool AddSpareWeapon( Actor newOwner ) { return AddSpareWeaponRegular( newOwner ); }
	override HDWeapon GetSpareWeapon( Actor newOwner, bool reverse, bool doSelect ) { return GetSpareWeaponRegular( newOwner, reverse, doSelect ); }

    override string PickupMessage() {
	    String pickupmessage = "$PICKUP_PPGOSTICK"; 
	    return pickupmessage;
	}

    override double weaponbulk(){
		return 125;
	}

    override string,double getpickupsprite(bool usespare){
		return "POGOA0",0.6;
	}

    override string gethelptext(){
		return
		WEPHELP_FIRE.."  Bounce forwards\n"
		..WEPHELP_ALTFIRE.."  Bounce backwards";
		
	}
	
    int oldvelz;
    
	states{
	select0:
		TNT1  A 0{
			A_TakeInventory("NulledWeapon");
		}
		#### A 0;
		---- A 1 A_Raise();
		---- A 1 A_Raise(30);
		---- A 1 A_Raise(30);
		---- A 1 A_Raise(24);
		---- A 1 A_Raise(18);
		wait;

	deselect0:
		TNT1  A 0;
		---- AAA 1 A_Lower();
		---- A 1 A_Lower(18);
		---- A 1 A_Lower(24);
		---- A 1 A_Lower(30);
		wait;

	ready:
	    TNT1 A 0;
		#### # 1 A_WeaponReady(WRF_ALL);
		goto readyend;

    fire:
        #### # 1 {  let hdp=hdplayerpawn(self);
                    if(hdp.fatigue>HDCONST_SPRINTFATIGUE)
                        setweaponstate("nope");
                    invoker.oldvelz=hdplayerpawn(self).vel.z;
                 }
        #### # 0 A_CheckFloor("pogo");
        #### # 0 A_Refire("fire");
        goto ready;
        
    altfire:
        #### # 0 {  let hdp=hdplayerpawn(self);
                    if(hdp.fatigue>HDCONST_SPRINTFATIGUE)
                        setweaponstate("nope");
                    invoker.oldvelz=hdplayerpawn(self).vel.z;
                 }
        #### # 1 {invoker.oldvelz=hdplayerpawn(self).vel.z;}
        #### # 0 A_CheckFloor("altpogo");
        #### # 0 A_Refire("altfire");
        goto ready;
        
    pogo:
        #### # 1 {A_Recoil(-1); 
                  A_StartSound("weapons/pogo",CHAN_WEAPON);}
        #### # 8 {  let hdp=hdplayerpawn(self);
                    ThrustThingZ(0,10-invoker.oldvelz*2,0,1);
                    hdp.fatigue+=2;
                    if(hdp.fatigue>HDCONST_SPRINTFATIGUE)
                    {   
                        hdp.damagemobj(self,null,1,"internal");
                    }
                }
        #### # 0 A_Refire("fire");
        goto ready;
        
    altpogo:
        #### # 1 {A_Recoil(1);
                  A_StartSound("weapons/pogo",CHAN_WEAPON);}
        #### # 8 { let hdp=hdplayerpawn(self);
                    ThrustThingZ(0,10-invoker.oldvelz*2,0,1);
                    hdp.fatigue+=2;
                    if(hdp.fatigue>HDCONST_SPRINTFATIGUE)
                    {   
                        hdp.damagemobj(self,null,1,"internal");
                    }
                }
        #### # 0 A_Refire("altfire");
        goto ready;

	spawn:
		POGO A -1;
		stop;
	
	}
}

class PogoStickSpawn:actor{
	override void postbeginplay(){
		super.postbeginplay();
  		A_SpawnItemEx("HDPogoStick",random(-5,5),random(-5,5),flags:SXF_NOCHECKPOSITION);
		self.Destroy();
	}
}
