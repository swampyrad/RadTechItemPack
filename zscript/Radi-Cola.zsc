// Radi-COOL bro!!!
class HDRadiCola:PortableStimpack{
	default{
		//$Category "Items/Hideous Destructor/Supplies"
		//$Title "Radi-Cola"
		//$Sprite "RDCLA0"

		+hdweapon.dontdisarm

		inventory.pickupmessage "$PICKUP_RADICOLA";
		inventory.icon "RDCLA0";
		tag "$TAG_RADICOLA";
		hdweapon.refid "rdc";

		portablestimpack.mainhelptext "$RADICOLA_HELPTEXT";
		portablestimpack.spentinjecttype "SpentRadiCola";
		portablestimpack.injecttype "InjectRadiColaDummy";
	}
	
	states(actor) {
		spawn2:
			RDCL A -1;
	}
	
	action void A_InjectorReachUp(){
		if(hdplayerpawn(self))hdplayerpawn(self).gunbraced=false;

		if(invoker.weaponstatus[0]&INJECTF_SPENT){
			setweaponstate("nope");
			return;
		}

		let blockinv = HDWoundFixer.CheckCovered(self,CHECKCOV_ONLYFULL);
		if(blockinv){
			A_TakeOffFirst(blockinv.gettag(),2);
			setweaponstate("nope");
			return;
		}

		// bottoms up!
		if(pitch>-55){
			A_MuzzleClimb(0,-8);
			A_Refire();
			return;
		}

		setweaponstate("inject");
	}

	override void InjectorInject(Actor agent, Actor patient) {
		patient.A_SetBlend("7a 3a 18",0.1,4);

		let hdp = HDPlayerPawn(patient);
		
		if (hdp) {
			hdp.A_MuzzleClimb((0,2),(0,0),(0,0),(0,0));
		} else {
			patient.A_StartSound(patient.painsound,CHAN_VOICE);
		}

		agent.A_StartSound("misc/radicola",CHAN_WEAPON,CHANF_OVERLAP);
		weaponstatus[0]|=INJECTF_SPENT;

		A_InjectorEffect(patient);
	}

	states{
		fire:
		hold:
			TNT1 A 1;
			TNT1 A 0 A_InjectorReachUp();
			goto nope;
		althold:
			TNT1 A 8{
				bool helptext=dohelptext();
				flinetracedata injectorline;
				linetrace(
					angle,42,pitch,
					offsetz:gunheight()-2,
					data:injectorline
				);
				let c=HDPlayerPawn(injectorline.hitactor);
				if(!c){
					let ccc=HDHumanoid(injectorline.hitactor);
					if(
						ccc
						&&invoker.getclassname()=="HDRadiColaDrinker"
					){
						if(
							ccc.stunned<100
							||ccc.health<10
						){
							if(helptext)A_WeaponMessage(stringtable.localize("$RADICOLA_NONEED"),2);
							return resolvestate("nope");
						}
						invoker.weaponstatus[0]|=INJECTF_SPENT;
						ccc.A_StartSound(ccc.painsound,CHAN_VOICE);
						ccc.stunned=max(0,ccc.stunned>>1);
						// if(!countinv(invoker.inventorytype))return resolvestate("deselecthold");
						return resolvestate("injected");
					}
					if(helptext)A_WeaponMessage(stringtable.localize("$RADICOLA_NOTHINGTOBEDONE"),2);
					return resolvestate("nope");
				}
				let blockinv=HDWoundFixer.CheckCovered(self,CHECKCOV_ONLYFULL);
				if(blockinv){
					if(helptext)A_WeaponMessage(stringtable.localize("$RADICOLA_TAKEOFFOTHER")..blockinv.gettag()..stringtable.localize("$RADICOLA_ELLIPSES"));
					return resolvestate("nope");
				}
				if(IsMoving.count(c)>4){
					bool chelptext=DoHelpText(c);
					if(c.countinv("HDStim")){
						if(chelptext)HDWeapon.ForceWeaponMessage(c,string.format(stringtable.localize("$RADICOLA_OVERDOSEPLAYER"),player.getusername()));
						if(helptext)A_WeaponMessage(stringtable.localize("$RADICOLA_FIDGETY"));
					}else{
						if(chelptext)HDWeapon.ForceWeaponMessage(c,string.format(stringtable.localize("$RADICOLA_STOPSQUIRMING"),player.getusername()));
						if(helptext)A_WeaponMessage(stringtable.localize("$RADICOLA_STAYSTILLOTHER"));
					}
					return resolvestate("nope");
				}
				if(
					//because poisoning people should count as friendly fire!
					(teamplay || !deathmatch)&&
					(
						(
							invoker.injecttype=="InjectRadiColaDummy"
							&& c.countinv("HDStim")
						)||
						(
							invoker.injecttype=="InjectZerkDummy"
							&& c.countinv("HDZerk")>HDZerk.HDZERK_COOLOFF
						)
					)
				){
					if(DoHelpText(c))HDWeapon.ForceWeaponMessage(c,string.format(stringtable.localize("$RADICOLA_OVERDOSEPLAYER"),player.getusername()));
					if(DoHelpText())A_WeaponMessage(stringtable.localize("$RADICOLA_FIDGETY"));
					return resolvestate("nope");
				}

				//and now...
				A_InjectorInject(self, c);
				return resolvestate("injected");
			}
		injected:
			TNT1 A 8;
			goto nope;
	}
}

class InjectRadiColaDummy:IdleDummy{
	hdplayerpawn tg;
	states{
	spawn:
		TNT1 A 6 nodelay{
			tg=HDPlayerPawn(target);
			if(!tg||tg.bkilled){destroy();return;}
			if(tg.countinv("HDZerk")>HDZerk.HDZERK_COOLOFF)tg.aggravateddamage+=int(ceil(accuracy*0.01*random(0,1)));
		}
		TNT1 A 1{
			if(!target||target.bkilled){destroy();return;}
			HDF.Give(target,"HDStim",HDStim.HDSTIM_DOSE*0.2);
		}stop;
	}
}

//code borrowed from HDFragGrenadeRoller
class SpentRadiCola:HDActor {

	vector3 keeprolling;
	
	// this should make empty cans kickable
	default{
	
	  -noextremedeath -floorclip +shootable +noblood +forcexybillboard
		+activatemcross -noteleport +noblockmonst +pushable
		+missile +bounceonactors +usebouncestate
		+invulnerable 

		bouncetype "doom";
	  damagetype "none";
		bouncesound "misc/emptycan";
		bouncefactor 0.5;
		
		mass 10;
		scale 0.37;
		radius 3;
		height 4;
		alpha 1.0;
	}
	
	states{
	spawn:
		RDCL B 0 A_ChangeVelocity(vel.x*3+frandom(-1,1), vel.y*3+frandom(-1,1), vel.z+4, CVF_REPLACE);
		goto spawn2;
	spawn2:
		#### B 15{
		  brollsprite=true;brollcenter=true;
			roll=randompick(1,1,1,1,3,3,3,3,0,2)*90;
			if(abs(vel.z-keeprolling.z)>10)A_StartSound("misc/emptycan",CHAN_BODY);
			else if(floorz>=pos.z)A_StartSound("misc/emptycan");
			keeprolling=vel;
			if(abs(vel.x)<0.5 && abs(vel.y)<0.5) setstatelabel("death");
		}loop;
	bounce:
		---- B 0{
			bmissile=false;
			vel*=0.9;
		}goto spawn2;
	death:
		---- B 5{
			if(abs(vel.z-keeprolling.z)>2){
				A_StartSound("misc/emptycan",CHAN_BODY);
				keeprolling=vel;
			}
			if(abs(vel.x)>0.5 || abs(vel.y)>0.5) setstatelabel("spawn");
		}wait;
	}
}

/*
class RadiColaP:HDUPK{
	default{
		+forcexybillboard
		scale 0.37;height 3;radius 3;
		hdupk.amount 1;
		hdupk.pickuptype "HDRadiCola";
		hdupk.pickupmessage "$PICKUP_RADICOLA";
		hdupk.pickupsound "weapons/pocket";
		stamina 1;
	}
	override void postbeginplay(){
		super.postbeginplay();
		pickupmessage=getdefaultbytype(pickuptype).pickupmessage();
	}
	states{
	spawn:
		RDCL A -1;
	}
}
*/

//RadiCola spawner that offsets spawn position
//so it doesn't just appear directly on top of stuff
class RadiColaSpawn:actor{
	override void postbeginplay(){
		super.postbeginplay();
		//random chance to get a six-pack instead of a single can
		if(!random(0,9))A_SpawnItemEx("RadiColaSixPack",random(-10,10),random(5,15),flags:SXF_NOCHECKPOSITION);
  		else A_SpawnItemEx("HDRadiCola",random(-5,5),random(5,10),flags:SXF_NOCHECKPOSITION);
		self.Destroy();
	}
}

//spawns a six-pack of RadiCola
class RadiColaSixPack:HDRadiCola{
	override void postbeginplay(){
		super.postbeginplay();
		A_SpawnItemEx("HDRadiCola",-4,0,flags:SXF_NOCHECKPOSITION);
		A_SpawnItemEx("HDRadiCola",-4,4,flags:SXF_NOCHECKPOSITION);
		A_SpawnItemEx("HDRadiCola",0,4,flags:SXF_NOCHECKPOSITION);
		A_SpawnItemEx("HDRadiCola",4,0,flags:SXF_NOCHECKPOSITION);
		A_SpawnItemEx("HDRadiCola",4,4,flags:SXF_NOCHECKPOSITION);
	}
}